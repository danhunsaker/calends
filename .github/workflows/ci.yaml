name: CI (Test/Build/Release)

on:
  - push
  - pull_request

env:
  GO111MODULE: on

jobs:
  test:
    name: Test Go ${{ matrix.go }}/PHP ${{ matrix.php }}/Dart ${{ matrix.dart }} on ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        go:
          - ~1.19.0
          - ~1.18.0
          - ~1.17.0
        php:
          - '8.2'
          - '8.1'
          - '8.0'
          - '7.4'
        dart:
          - stable
        include:
          - os: ubuntu-latest
            ext: so
          - os: windows-latest
            ext: dll
          - os: macos-latest
            ext: dylib
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        id: php
        with:
          php-version: ${{ matrix.php }}
          coverage: none
          extensions: ffi

      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ matrix.dart }}

      - name: Run Go tests (Not Windows)
        if: ${{ matrix.os != 'windows-latest' }}
        run: ./tests/go.sh

      - name: Run Go tests (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: pwsh ./tests/go.ps1

      - name: Test building libcalends
        run: go build -v -o libcalends.out -buildmode=c-shared ./libcalends

      - name: Test building cli
        run: go build -v -o calends.out ./cli

      - name: Test PHP wrapper (Not Windows)
        if: ${{ matrix.os != 'windows-latest' }}
        run: ./tests/php.sh ${{ steps.php.outputs.php-version }} ${{ matrix.ext }}

      - name: Test PHP wrapper (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: pwsh ./tests/php.ps1 ${{ steps.php.outputs.php-version }} ${{ matrix.ext }}

      - name: Test Dart wrapper
        run: |
          cd libcalends/dart
          dart pub get
          dart test

  build:
    name: Build Binaries
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}

      - name: Build binaries
        run: ./build-all

      - name: Release binaries
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*
            dist/bin/*
