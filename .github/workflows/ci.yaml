name: CI (Test/Build/Release)

on:
  - push
  - pull_request

env:
  GO111MODULE: on

jobs:
  test:
    name: "Tests: Go ${{ matrix.go }}/Dart ${{ matrix.dart }}/Node ${{ matrix.node }}/PHP ${{ matrix.php }} on ${{ matrix.os }}"
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        go:
          - '1.19'
          - '1.18'
          - '1.17'
        dart:
          - stable
        node:
          - 18
          - 16
        php:
          - '8.2'
          - '8.1'
          - '8.0'
          - '7.4'
        include:
          - os: ubuntu-latest
            ext: so
          - os: windows-latest
            ext: dll
          - os: macos-latest
            ext: dylib
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}

      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ matrix.dart }}

      - name: Setup Node
        if: ${{ matrix.go == '1.19' }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        id: php
        with:
          php-version: ${{ matrix.php }}
          coverage: none
          extensions: ffi
        env:
          update: true

      - name: Local Dependencies
        if: ${{ matrix.os == 'ubuntu-latest' && github.actor == 'nektos/act' }}
        run: |
          apt-get update
          apt-get install -y wget

      - name: Run Go tests (Not Windows)
        if: ${{ matrix.os != 'windows-latest' }}
        run: ./tests/go.sh

      - name: Run Go tests (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: pwsh ./tests/go.ps1

      - name: Upload Code Coverage
        uses: codecov/codecov-action@v3
        with:
          files: coverage.txt

      - name: Test building libcalends
        run: go build -v -o libcalends.${{ matrix.ext }} -buildmode=c-shared ./libcalends

      - name: Test building cli
        run: go build -v -o calends.out ./cli

      - name: Test building WASM
        if: ${{ matrix.go == '1.19' }}
        run: go build -v -o calends.wasm ./wasm
        env:
          GOOS: js
          GOARCH: wasm

      - name: Test Dart wrapper
        run: |
          cp libcalends.${{ matrix.ext }} libcalends/dart/
          cd libcalends/dart
          dart pub get
          dart test

      - name: Test WASM via JS wrapper
        if: ${{ matrix.go == '1.19' }}
        run: |
          cp calends.wasm wasm/js/
          cd wasm/js
          npm ci
          npm test

      - name: Test PHP wrapper (Not Windows)
        if: ${{ matrix.os != 'windows-latest' }}
        run: ./tests/php.sh ${{ steps.php.outputs.php-version }} ${{ matrix.ext }}

      - name: Test PHP wrapper (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: pwsh ./tests/php.ps1 ${{ steps.php.outputs.php-version }} ${{ matrix.ext }}

  crowdin:
    name: Crowdin Upload
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Generate POT files
        run: |
          cd docs
          make gettext

      - name: Crowdin push
        uses: crowdin/github-action@1.5.3
        with:
          upload_sources: true
          upload_translations: false
          download_translations: false
          crowdin_branch_name: "${{ env.BRANCH_NAME }}"
        env:
          CROWDIN_PROJECT_ID: ${{ secrets.CROWDIN_PROJECT_ID }}
          CROWDIN_PERSONAL_TOKEN: ${{ secrets.CROWDIN_PERSONAL_TOKEN }}

  docs:
    name: ReadTheDocs (${{ matrix.name }})
    needs: test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Afrikaans
            lang: af
            hook: 224245
          - name: Arabic
            lang: ar
            hook: 224244
          - name: Catalan
            lang: ca
            hook: 224246
          - name: Czech
            lang: cs
            hook: 224249
          - name: Danish
            lang: da
            hook: 224250
          - name: German
            lang: de
            hook: 224291
          - name: Greek
            lang: el
            hook: 224293
          - name: English
            lang: en
            hook: 42732
          - name: Esperanto
            lang: eo
            hook: 224288
          - name: Spanish
            lang: es-es
            hook: 224766
          - name: Finnish
            lang: fi
            hook: 224289
          - name: French
            lang: fr
            hook: 224290
          - name: Hebrew
            lang: he
            hook: 224294
          - name: Hungarian
            lang: hu
            hook: 224295
          - name: Italian
            lang: it
            hook: 224296
          - name: Japanese
            lang: ja
            hook: 224298
          - name: Korean
            lang: ko
            hook: 224299
          - name: Dutch
            lang: nl
            hook: 224251
          - name: Norwegian
            lang: no
            hook: 224313
          - name: Polish
            lang: pl
            hook: 224362
          - name: Brazillian Portugese
            lang: pt-br
            hook: 224365
          - name: Portugese
            lang: pt-pt
            hook: 224364
          - name: Romanian
            lang: ro
            hook: 224762
          - name: Russian
            lang: ru
            hook: 224763
          - name: Serbian
            lang: sr
            hook: 224764
          - name: Swedish
            lang: sv-se
            hook: 224767
          - name: Turkish
            lang: tr
            hook: 224768
          - name: Ukranian
            lang: uk
            hook: 224769
          - name: Vietnamese
            lang: vi
            hook: 224770
          - name: Simplified Chinese
            lang: zh-cn
            hook: 224247
          - name: Traditional Chinese
            lang: zh-tw
            hook: 224248
    steps:
      - name: Invoke deployment hook
        uses: distributhor/workflow-webhook@v3
        if: matrix.lang == 'en'
        env:
          webhook_type: json-extended
          webhook_url: https://readthedocs.org/api/v2/webhook/calends/${{ matrix.hook }}/

      - name: Invoke deployment hook
        uses: distributhor/workflow-webhook@v3
        if: matrix.lang != 'en'
        env:
          webhook_type: json-extended
          webhook_url: https://readthedocs.org/api/v2/webhook/calends-${{ matrix.lang }}/${{ matrix.hook }}/

  build:
    name: Build Binaries
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.19'

      - name: Build binaries
        run: ./build-all

      - name: Upload binaries as assets
        uses: actions/upload-artifact@v3
        with:
          name: builds
          path: dist/*

      - name: Release binaries
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*
            dist/bin/*
